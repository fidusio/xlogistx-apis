package io.xlogistx.payment.paypal.daos;

import java.util.Date;

import org.zoxweb.server.filters.DateTimeValueFilter;
import org.zoxweb.shared.data.SetNameDescriptionDAO;
import org.zoxweb.shared.http.HATEOASLink;
import org.zoxweb.shared.util.ArrayValues;
import org.zoxweb.shared.util.GetNVConfig;
import org.zoxweb.shared.util.NVConfig;
import org.zoxweb.shared.util.NVConfigEntity;
import org.zoxweb.shared.util.NVConfigEntityLocal;
import org.zoxweb.shared.util.NVConfigManager;
import org.zoxweb.shared.util.SharedUtil;
import org.zoxweb.shared.util.NVConfigEntity.ArrayType;

@SuppressWarnings("serial")
public class PPRefundDAO
	extends SetNameDescriptionDAO
{
	
	public enum Params
		implements GetNVConfig
	{
		ID(NVConfigManager.createNVConfig("id", "ID of the refund transaction. 17 characters max.", "ID", true, true, String.class)),
		AMOUNT(NVConfigManager.createNVConfigEntity("amount", "Details including both refunded amount (to payer) and refunded fee (to payee). 10 characters max.", "Amount", true, true, PPAmountDAO.NVC_PAYPAL_AMOUNT_DAO)),
		CREATE_TIME(NVConfigManager.createNVConfig("create_time", "Time of refund as defined in RFC 3339 Section 5.6. Value assigned by PayPal.", "CreateTime", true, true, false, Date.class, new DateTimeValueFilter("yyyy-MM-dd'T'HH:mm:ss'Z'", "UTC"))),
		STATE(NVConfigManager.createNVConfig("state", "State of the refund. One of the following: pending; completed; or failed. Value assigned by PayPal.", "State", true, true, String.class)),
		CAPTURE_ID(NVConfigManager.createNVConfig("capture_id", "ID of the sale transaction being refunded. Value assigned by PayPal.", "CaptureID", true, true, String.class)),
		PARENT_PAYMENT(NVConfigManager.createNVConfig("parent_payment", "ID of the payment resource on which this transaction is based. Value assigned by PayPal.", "ParentPayment", true, true, String.class)),
		UPDATE_TIME(NVConfigManager.createNVConfig("update_time", "Time that the resource was last updated. Value assigned by PayPal.", "UpdateTime", true, true,false, Date.class, new DateTimeValueFilter("yyyy-MM-dd'T'HH:mm:ss'Z'", "UTC"))),
		LINKS(NVConfigManager.createNVConfigEntity("links", "HATEOAS links related to this call. Value generated by PayPal.", "Links", true, true, HATEOASLink.NVC_HATEOAS_LINK, ArrayType.LIST)),
		
		;
		
		private final NVConfig cType;
		
		Params(NVConfig c)
		{
			cType = c;
		}
		
		public NVConfig getNVConfig() 
		{
			return cType;
		}
		
	}
	
	public static final NVConfigEntity NVC_PAYPAL_REFUND_DAO = new NVConfigEntityLocal(	
																							"pp_refund_dao",
																							null,
																							"PPRefundDAO", 
																							true, 
																							false, 
																							false, 
																							false, 
																							PPRefundDAO.class, 
																							SharedUtil.extractNVConfigs(Params.values()), 
																							null, 
																							false, 
																							SetNameDescriptionDAO.NVC_NAME_DESCRIPTION_DAO
																					  );
	
	public PPRefundDAO()
	{
		super(NVC_PAYPAL_REFUND_DAO);
	}
	
	public String getID() 
	{
		return lookupValue(Params.ID);
	}
	
	public void setID(String id) 
	{
		setValue(Params.ID, id);
	}
	
	public PPAmountDAO getAmount() 
	{
		return lookupValue(Params.AMOUNT);
	}
	
	public void setAmount(PPAmountDAO amount) 
	{
		setValue(Params.AMOUNT, amount);
	}
	
	public long getCreateTime() 
	{
		return lookupValue(Params.CREATE_TIME);
	}
	
	public void setCreateTime(long time)
	{
		setValue(Params.CREATE_TIME, time);
	}
	
	public String getState() 
	{
		return lookupValue(Params.STATE);
	}
	
	public void setState(String state) 
	{
		setValue(Params.STATE, state);
	}
	
	public String getCaptureID() 
	{
		return lookupValue(Params.CAPTURE_ID);
	}
	
	public void setCaptureID(String id) 
	{
		setValue(Params.CAPTURE_ID, id);
	}
	
	public String getParentPayment() 
	{
		return lookupValue(Params.PARENT_PAYMENT);
	}
	
	public void setParentPayment(String payment) 
	{
		setValue(Params.PARENT_PAYMENT, payment);
	}
	
	public long getUpdateTime() 
	{
		return lookupValue(Params.UPDATE_TIME);
	}
	
	public void setUpdateTime(long time)
	{
		setValue(Params.UPDATE_TIME, time);
	}
	
	@SuppressWarnings("unchecked")
	public ArrayValues<HATEOASLink> getLinks() 
	{
		return (ArrayValues<HATEOASLink>) lookup(Params.LINKS);
	}
	
}